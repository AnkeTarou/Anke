<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>アンケート投稿サイト</title>
  <link rel="stylesheet" type="text/css" href="css/index.css" />
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.min.js"></script>
  <script type="text/javascript" src="js/lib.js"></script>
  <script type="text/javascript" src="js/login.js"></script>
  <script type="text/javascript" src="js/account.js"></script>
  <script type="text/javascript" src="js/post.js"></script>
  <script type="text/javascript" src="js/search.js"></script>
  <script type="text/javascript" src="js/mail.js"></script>

  <script>
    window.onload = function() {

      login.init();
      account.init();
      post.init();
      search.init();
      mail.init();

      const choicefile = document.createElement("choicefile");
      const sendfile = document.getElementById("sendfile");
        /*sendfile.onclick = function() {

        // body部パラメーター
        var data = {};
        // Canvasのデータをbase64でエンコードした文字列を取得
        var canvasData = $('canvas').get(0).toDataURL();

        // 不要な情報を取り除く
        canvasData = canvasData.replace(/^data:image\/png;base64,/, '');

        data.image = canvasData;

        $.ajax({
          url: '/file/',
          type: 'POST',
          success: function() {
              // 成功時の処理
              alert("いいゾ～これ");
            },
            error(jqXHR, textStatus, errorThrown) {
              // 失敗時の処理
              alert("だめです");
            },
            data: data,
            dataType: 'json'
          });
      };*/
      $(function() {
        var file = null; // 選択されるファイル
        var blob = null; // 画像(BLOBデータ)
        const THUMBNAIL_WIDTH = 500; // 画像リサイズ後の横の長さの最大値
        const THUMBNAIL_HEIGHT = 500; // 画像リサイズ後の縦の長さの最大値

        // ファイルが選択されたら
        $('input[type=file]').change(function() {

          // ファイルを取得
          file = $(this).prop('files')[0];
          // 選択されたファイルが画像かどうか判定
          if (file.type != 'image/jpeg' && file.type != 'image/png') {
            // 画像でない場合は終了
            file = null;
            blob = null;
            return;
          }

          // 画像をリサイズする
          var image = new Image();
          var reader = new FileReader();
          reader.onload = function(e) {
            image.onload = function() {
              var width, height;
              if(image.width > image.height){
                // 横長の画像は横のサイズを指定値にあわせる
                var ratio = image.height/image.width;
                width = THUMBNAIL_WIDTH;
                height = THUMBNAIL_WIDTH * ratio;
              } else {
                // 縦長の画像は縦のサイズを指定値にあわせる
                var ratio = image.width/image.height;
                width = THUMBNAIL_HEIGHT * ratio;
                height = THUMBNAIL_HEIGHT;
              }
              // サムネ描画用canvasのサイズを上で算出した値に変更
              var canvas = $('#canvas')
                           .attr('width', width)
                           .attr('height', height);
              var ctx = canvas[0].getContext('2d');
              // canvasに既に描画されている画像をクリア
              ctx.clearRect(0,0,width,height);
              // canvasにサムネイルを描画
              ctx.drawImage(image,0,0,image.width,image.height,0,0,width,height);

              // canvasからbase64画像データを取得
              var base64 = canvas.get(0).toDataURL('image/jpeg');
              // base64からBlobデータを作成
              var barr, bin, i, len;
              bin = atob(base64.split('base64,')[1]);
              len = bin.length;
              barr = new Uint8Array(len);
              i = 0;
              while (i < len) {
                barr[i] = bin.charCodeAt(i);
                i++;
              }
              blob = new Blob([barr], {type: 'image/jpeg'});
              console.log(blob);
            }
            image.src = e.target.result;
          }
          reader.readAsDataURL(file);
        });


        // アップロード開始ボタンがクリックされたら
        $('#upload').click(function(){

          // ファイルが指定されていなければ何も起こらない
          if(!file || !blob) {
            alert("指定されてないぞカス");
            return;
          }

          var name, fd = new FormData();
          fd.append('file', blob); // ファイルを添付する

          $.ajax({
            url: "file", // 送信先
            type: 'POST',
            dataType: 'json',
            data: fd,
            processData: false,
            contentType: false
          })
          .done(function( data, textStatus, jqXHR ) {
            // 送信成功
            alert("送信成功");
          })
          .fail(function( jqXHR, textStatus, errorThrown ) {
            // 送信失敗
          });

        });

      });
      }
  </script>
</head>
<body>
  <section id="inputBox">
    <input type="text" id="inputQuery"/>
    <br />
    <input type="text" name="inputAnser" />
    <br />
    <input type="button" id="inputAddBtn" value="解答追加"/>
    <input type="button" id="inputDelBtn" class="off" value="解答削除"/>
    <input type="submit" id="inputSub" value="送信">
  </section>
  <section id="result">
    <div id="searchBox">
      <input type="text" id="searchValue" />
      <input type="submit" id="searchSub" value="取得" />
    </div>
  </section>
  <section id="loginBox">
    <input type="text" id="inputloginid" />
    <br>
    <input type="password" id="inputloginpass" />
    <br>
    <input type="submit" id="inputlogin" value="ログイン">
    <input type="submit" id="inputlogout" value="ログアウト">
    <br>
    <input type="text" id="inputaccount" />
    <br>
    <input type="password" id="inputgetpass" />
    <br>
    <input type="submit" id="inputget" value="ユーザー登録">
    <br>
    <input type="submit" id="inputuser" value="ユーザー情報">
    <br>
  </section>
  <section id="mail">
    <input type="text" id="inputmailadress">
    <br>
    <input type="submit" id="inputmail" value="メール送信">
  </section>
  <!--<section id="file">
      <input type="file" id="choicefile" value="選択しらかた">
      <br>
      <input type="submit" id="sendfile" value="送信">
      <br>
      <canvas id="canvas"></canvas>
  </section> -->
  <!-- ファイル選択ボタン -->
  <section id="file">
  <div style="width: 500px">
    <form enctype="multipart/form-data" method="post">
      <input type="file" name="userfile" accept="image/*">
    </form>
  </div>

  <!-- サムネイル表示領域 -->
  <canvas id="canvas" width="0" height="0"></canvas>

  <!-- アップロード開始ボタン -->
  <button class="btn btn-primary" id="upload">投稿</button>
</section>
</body>
</html>
